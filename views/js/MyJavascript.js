$(document).ready(function() {    var tarif1 = 35;    var diapazon1_1 = 1000;    var diapazon1_2 = 50000;    var tarif2 = 30;    var diapazon2_1 = 50001;    var diapazon2_2 = 100000;    var tarif3 = 25;    var diapazon3_1 = 100001;    var diapazon3_2 = 200000;    var tarif4 = 20;    var diapazon4_1 = 200001;    var diapazon4_2 = 500000;    var tarif5 = 15;    var diapazon5_1 = 500001;    var diapazon5_2 = 1000000;    var tarif6 = 10;    var diapazon6_1 = 1000001;    var diapazon6_2 = 3000000;/*    // Расчет ежемесячного платежа и % ставки    function raschet(){    }    // если было изменено значение в поле "Сумма кредита"    $("#sum_credit").change(function () {        raschet();    })    // если было изменено значение в поле "Срок кредита"    $("#srok_credit").change(function () {        raschet();    })*/    $('#raschet_skoring').click(function(){        var sum_credit = $("#sum_credit").val(); // получение значение из поля "Сумма кредита"        var srok_credit = $("#srok_credit").val(); // получение значение из поля "Срок кредита"        var psm; // переменная для хранения процента по кредиту за месяц        // расчет процентной ставки по кредиту        if(sum_credit >= diapazon1_1 && sum_credit <= diapazon1_2){ // если сумма по кредиту попадает в интервал диапазона 1_1 и 1_2            $("#proc_credit").val(tarif1); // заполняем % по кредиту согласно тарифу1            psm = tarif1/12/100; // определяем процент по кредиту за месяц        } else if(sum_credit >= diapazon2_1 && sum_credit <= diapazon2_2) {            $("#proc_credit").val(tarif2);            psm = tarif2/12/100;        } else if(sum_credit >= diapazon3_1 && sum_credit <= diapazon3_2) {            $("#proc_credit").val(tarif3);            psm = tarif3/12/100;        } else if(sum_credit >= diapazon4_1 && sum_credit <= diapazon4_2) {            $("#proc_credit").val(tarif4);            psm = tarif4/12/100;        } else if(sum_credit >= diapazon5_1 && sum_credit <= diapazon5_2) {            $("#proc_credit").val(tarif5);            psm = tarif5/12/100;        } else if(sum_credit >= diapazon6_1 && sum_credit <= diapazon6_2) {            $("#proc_credit").val(tarif6);            psm = tarif6/12/100;        } else {            $("#proc_credit").val("-");        }        // расчет ежемесячного платежа по кредиту        var chislo_stepen = Math.pow(1+psm,srok_credit); // посчитаем число возведенное в степень = (1 + процент по кредиту за месяц) в степени Срок кредита        var ka = psm * chislo_stepen / (chislo_stepen-1); // Коэффициент аннуитета        var em = ka * sum_credit; // ежемесячный платеж        em = em.toFixed(2); // округляем дробное число до сотой части (0.00)        $("#platezh_credit").val(em); // заносим результат в поле "Ежемесячный платеж по кредиту"        // Анализирование Скоринг-Системы        var fixed_income = parseInt($("#fixed_income").val()); // получение значение из поля "Постоянный доход"        var additional_income = parseInt($("#additional_income").val()); // получение значение из поля "Дополнительный доход"        var fixed_outcome = parseInt($("#fixed_outcome").val()); // получение значение из поля "Постоянный расход"        var life_min = parseInt(8526); // прожиточный минимум в Белгороде        var koef_need_pay = 40; // 40% - коэффициент платежеспособности (минимальный необходимый остаток средств от суммы дохода)        var koef_dop_dohod = 30; // 30% - учитываемая доля дополнительного дохода клиента        var need_money = fixed_income * koef_need_pay / 100; // какой минимальной суммой должен распологать клиент        $("#need_money").val(need_money);        var real_money = fixed_income + additional_income*koef_dop_dohod/100 - fixed_outcome - life_min; // Расчет реального остатка после всех расходов = постоянный доход + 3-ья часть от дополнительного дохода - постоянные расходы - прожиточный минимум        $("#real_money").val(real_money);        // если реальный остаток средств больше необходимой суммы и больше ежемесячного платежа по кредиту, то положительное решение        if((real_money >= need_money) && (real_money >= em)){            $("#conclusion_credit").text("Заключение скоринг-системы: Достаточно дохода для получение кредита.");        } else {            var delta_money = real_money - need_money;            $("#conclusion_credit").text("Заключение скоринг-системы: Недостаточно дохода для получение кредита. Необходимо повысить сумму свободных средств на " + Math.abs(delta_money) + " руб.");        }    });    function calc_sum_points(){        var sum_points = 0;        sum_points += parseInt($('#type_employ_id option:selected').data('points'));        sum_points += parseInt($('#experience_id option:selected').data('points'));        sum_points += parseInt($('#position_employ_id option:selected').data('points'));        sum_points += parseInt($('#monthly_income_id option:selected').data('points'));        sum_points += parseInt($('#count_child_id option:selected').data('points'));        sum_points += parseInt($('#marital_status_id option:selected').data('points'));        sum_points += parseInt($('#education_id option:selected').data('points'));        sum_points += parseInt($('#car_id option:selected').data('points'));        sum_points += parseInt($('#age_id option:selected').data('points'));        var proc_points = sum_points * 100/1000;        if(proc_points < 65){            $('#sum_points').val("Вероятность выдачи кредита " + proc_points + "%. Меньше необходимого уровня.");        } else {            $('#sum_points').val("Вероятность выдачи кредита " + proc_points + "%. Больше необходимого уровня.");        }    }    $('#type_employ_id').change(function(){        calc_sum_points();    })    $('#experience_id').change(function(){        calc_sum_points();    })    $('#position_employ_id').change(function(){        calc_sum_points();    })    $('#monthly_income_id').change(function(){        calc_sum_points();    })    $('#count_child_id').change(function(){        calc_sum_points();    })    $('#marital_status_id').change(function(){        calc_sum_points();    })    $('#education_id').change(function(){        calc_sum_points();    })    $('#car_id').change(function(){        calc_sum_points();    })    $('#age_id').change(function(){        calc_sum_points();    })});